# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # autowire for Fantestic/CestManager. Should be handled via separate bundle, and removed here.
    Fantestic\CestManager\:
        resource: '../vendor/fantestic/cest-manager/src'
        autowire: true
    Fantestic\CestManager\Finder:
        arguments:
            - '%kernel.project_dir%/cests/src/Suites/Acceptance'


    # help api_platform
    App\CestManager\App\Normalizer\Collection\IdDenormalizer:
        tags:
            - { name: api_platform.identifier.denormalizer }
    App\CestManager\App\Normalizer\Collection\IdNormalizer:
        tags:
            - { name: api_platform.identifier.normalizer }
    App\CestManager\App\Normalizer\Action\IdNormalizer:
        tags:
            - { name: api_platform.identifier.normalizer }
    App\CestManager\App\Normalizer\Scenario\IdNormalizer:
        tags:
            - { name: api_platform.identifier.normalizer }
    App\CestManager\App\Normalizer\Scenario\IdDenormalizer:
        tags:
            - { name: api_platform.identifier.denormalizer }


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/CestManager/Domain/Entity/'
            - '../src/CestManager/Domain/ValueObject/'
    
    # TODO load from configuration
    App\CestManager\Infra\Factory\CollectionIdFactory:
        arguments:
            - 'Cests\Suites\Acceptance\'
            - 'Cest'
    App\CestManager\Infra\ActionProvider\ActionProviderCollection:
        arguments:
            - !tagged_iterator fantestic.action_provider

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
